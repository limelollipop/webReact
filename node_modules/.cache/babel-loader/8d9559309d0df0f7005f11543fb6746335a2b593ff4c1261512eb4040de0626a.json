{"ast":null,"code":"// import { useState } from 'react';\n\n// function App() {\n// \t// 아래는 비구조화 할당 useState(초기값세팅);\n// \tconst [time, setTime] = useState(3);\n\n// \t/*\n// useState 사용방법\n// 1. react로부터 import한다\n// 2. 비구조화 할당으로 useState를 선언한다.\n// \t이때 const [결과값(배열값), set 함수(결과값을 변경할 수 있는 유일한 함수)] = useState(초기값);\n// 3. 변화되는 지점에 결과값의 변수를 지정하고, 랜더링이 일어나야할 지점에 set 함수를 설정해서 특정 이벤트가 발생하면 set 함수를 발동해서 결과값을 변화시키고 그 변화를 인지한 리액트는 화면을 재 랜더링하여 업데이트 한다\n// */\n\n// \tfunction UpTime() {\n// \t\tsetTime(time + 1);\n// \t}\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<span>현재 시각 : {time}시</span>\n// \t\t\t<button onClick={UpTime}>Update</button>\n// \t\t</div>\n// \t);\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/bys/Desktop/000 기업형레이아웃 react/src/App.js"],"sourcesContent":["// import { useState } from 'react';\n\n// function App() {\n// \t// 아래는 비구조화 할당 useState(초기값세팅);\n// \tconst [time, setTime] = useState(3);\n\n// \t/*\n// useState 사용방법\n// 1. react로부터 import한다\n// 2. 비구조화 할당으로 useState를 선언한다.\n// \t이때 const [결과값(배열값), set 함수(결과값을 변경할 수 있는 유일한 함수)] = useState(초기값);\n// 3. 변화되는 지점에 결과값의 변수를 지정하고, 랜더링이 일어나야할 지점에 set 함수를 설정해서 특정 이벤트가 발생하면 set 함수를 발동해서 결과값을 변화시키고 그 변화를 인지한 리액트는 화면을 재 랜더링하여 업데이트 한다\n// */\n\n// \tfunction UpTime() {\n// \t\tsetTime(time + 1);\n// \t}\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<span>현재 시각 : {time}시</span>\n// \t\t\t<button onClick={UpTime}>Update</button>\n// \t\t</div>\n// \t);\n// }\n\n// export default App;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}